# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 14:52-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:15
msgid "Dictionary Operations"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:17
msgid ""
"The ``del`` statement removes a key-value pair from a dictionary. For "
"example, the following dictionary contains the names of various fruits "
"and the number of each fruit in stock.  If someone buys all of the pears,"
" we can remove the entry from the dictionary."
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:27
msgid ""
"\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"ch12_dict4\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\"> "
"(ch12_dict4)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var ch12_dict4_trace = {\"code\": \"inventory = {'apples': 430, "
"'bananas': 312, 'oranges': 525, 'pears': 217}\\n\\ndel "
"inventory['pears']\", \"trace\": [{\"ordered_globals\": [], \"stdout\": "
"\"\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": "
"{}, \"heap\": {}, \"line\": 1, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"inventory\"], \"stdout\": \"\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"inventory\": "
"[\"REF\", 1]}, \"heap\": {\"1\": [\"DICT\", [\"pears\", 217], "
"[\"apples\", 430], [\"oranges\", 525], [\"bananas\", 312]]}, \"line\": 3,"
" \"event\": \"step_line\"}, {\"ordered_globals\": [\"inventory\"], "
"\"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], "
"\"globals\": {\"inventory\": [\"REF\", 1]}, \"heap\": {\"1\": [\"DICT\", "
"[\"apples\", 430], [\"oranges\", 525], [\"bananas\", 312]]}, \"line\": 3,"
" \"event\": \"return\"}]};\n"
"var ch12_dict4_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        ch12_dict4_vis = new "
"ExecutionVisualizer('ch12_dict4',ch12_dict4_trace,\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: "
"redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        attachLoggers(ch12_dict4_vis,'ch12_dict4');\n"
"        styleButtons('ch12_dict4');\n"
"        allVisualizers.push(ch12_dict4_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component "
"ch12_dict4_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#ch12_dict4_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', "
"'div_id':'ch12_dict4'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (ch12_dict4_vis) {\n"
"        ch12_dict4_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:28
msgid ""
"Dictionaries are also mutable.  As we've seen before with lists, this "
"means that the dictionary can be modified by referencing an association "
"on the left hand side of the assignment statement.  In the previous "
"example, instead of deleting the entry for ``pears``, we could have set "
"the inventory to ``0``."
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:39
msgid ""
"\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"ch12_dict4a\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\"> "
"(ch12_dict4a)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var ch12_dict4a_trace = {\"code\": \"inventory = {'apples': 430, "
"'bananas': 312, 'oranges': 525, 'pears': 217}\\n\\ninventory['pears'] = "
"0\", \"trace\": [{\"ordered_globals\": [], \"stdout\": \"\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {}, "
"\"heap\": {}, \"line\": 1, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"inventory\"], \"stdout\": \"\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"inventory\": "
"[\"REF\", 1]}, \"heap\": {\"1\": [\"DICT\", [\"pears\", 217], "
"[\"apples\", 430], [\"oranges\", 525], [\"bananas\", 312]]}, \"line\": 3,"
" \"event\": \"step_line\"}, {\"ordered_globals\": [\"inventory\"], "
"\"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], "
"\"globals\": {\"inventory\": [\"REF\", 1]}, \"heap\": {\"1\": [\"DICT\", "
"[\"pears\", 0], [\"apples\", 430], [\"oranges\", 525], [\"bananas\", "
"312]]}, \"line\": 3, \"event\": \"return\"}]};\n"
"var ch12_dict4a_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        ch12_dict4a_vis = new "
"ExecutionVisualizer('ch12_dict4a',ch12_dict4a_trace,\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: "
"redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        attachLoggers(ch12_dict4a_vis,'ch12_dict4a');\n"
"        styleButtons('ch12_dict4a');\n"
"        allVisualizers.push(ch12_dict4a_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component "
"ch12_dict4a_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#ch12_dict4a_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', "
"'div_id':'ch12_dict4a'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (ch12_dict4a_vis) {\n"
"        ch12_dict4a_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:40
msgid ""
"Similarily, a new shipment of 200 bananas arriving could be handled like "
"this."
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:50
msgid ""
"\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"ch12_dict5\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\"> "
"(ch12_dict5)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var ch12_dict5_trace = {\"code\": \"inventory = {'apples': 430, "
"'bananas': 312, 'oranges': 525, 'pears': 217}\\ninventory['bananas'] = "
"inventory['bananas'] + 200\\n\\n\\nnumItems = len(inventory)\", "
"\"trace\": [{\"ordered_globals\": [], \"stdout\": \"\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {}, \"heap\": {}, "
"\"line\": 1, \"event\": \"step_line\"}, {\"ordered_globals\": "
"[\"inventory\"], \"stdout\": \"\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"inventory\": [\"REF\", 1]}, "
"\"heap\": {\"1\": [\"DICT\", [\"pears\", 217], [\"apples\", 430], "
"[\"oranges\", 525], [\"bananas\", 312]]}, \"line\": 2, \"event\": "
"\"step_line\"}, {\"ordered_globals\": [\"inventory\"], \"stdout\": \"\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": "
"{\"inventory\": [\"REF\", 1]}, \"heap\": {\"1\": [\"DICT\", [\"pears\", "
"217], [\"apples\", 430], [\"oranges\", 525], [\"bananas\", 512]]}, "
"\"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": "
"[\"inventory\", \"numItems\"], \"stdout\": \"\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"numItems\": 4, "
"\"inventory\": [\"REF\", 1]}, \"heap\": {\"1\": [\"DICT\", [\"pears\", "
"217], [\"apples\", 430], [\"oranges\", 525], [\"bananas\", 512]]}, "
"\"line\": 5, \"event\": \"return\"}]};\n"
"var ch12_dict5_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        ch12_dict5_vis = new "
"ExecutionVisualizer('ch12_dict5',ch12_dict5_trace,\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: "
"redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        attachLoggers(ch12_dict5_vis,'ch12_dict5');\n"
"        styleButtons('ch12_dict5');\n"
"        allVisualizers.push(ch12_dict5_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component "
"ch12_dict5_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#ch12_dict5_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', "
"'div_id':'ch12_dict5'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (ch12_dict5_vis) {\n"
"        ch12_dict5_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:51
msgid ""
"Notice that there are now 512 bananas---the dictionary has been modified."
"  Note also that the ``len`` function also works on dictionaries.  It "
"returns the number of key-value pairs:"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:57
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:71
msgid "dict-2-1: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Dictionaries/Dictionaryoperations.rst:73
msgid ""
"mydict = {\"cat\":12, \"dog\":6, \"elephant\":23}\n"
"mydict[\"mouse\"] = mydict[\"cat\"] + mydict[\"dog\"]\n"
"print(mydict[\"mouse\"])"
msgstr ""

