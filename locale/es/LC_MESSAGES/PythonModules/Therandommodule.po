# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 18:20-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/PythonModules/Therandommodule.rst:15
msgid "The `random` module"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:17
msgid ""
"We often want to use **random numbers** in programs.  Here are a few "
"typical uses:"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:19
msgid ""
"To play a game of chance where the computer needs to throw some dice, "
"pick a number, or flip a coin,"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:20
msgid "To shuffle a deck of playing cards randomly,"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:21
msgid "To randomly allow a new enemy spaceship to appear and shoot at you,"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:22
msgid ""
"To simulate possible rainfall when we make a computerized model for "
"estimating the environmental impact of building a dam,"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:24
msgid "For encrypting your banking session on the Internet."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:26
msgid ""
"Python provides a module ``random`` that helps with tasks like this.  You"
" can take a look at it in the documentation.  Here are the key things we "
"can do with it."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:39
msgid ""
"Press the run button a number of times.  Note that the values change each"
" time.  These are random numbers."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:41
msgid ""
"The ``randrange`` function generates an integer between its lower and "
"upper argument, using the same semantics as ``range`` --- so the lower "
"bound is included, but the upper bound is excluded.   All the values have"
" an equal probability of occurring (i.e. the results are *uniformly* "
"distributed)."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:46
msgid ""
"The ``random()`` function returns a floating point number in the range "
"[0.0, 1.0) --- the square bracket means \"closed interval on the left\" "
"and the round parenthesis means \"open interval on the right\".  In other"
" words, 0.0 is possible, but all returned numbers will be strictly less "
"than 1.0.  It is usual to *scale* the results after calling this method, "
"to get them into a range suitable for your application."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:52
msgid ""
"In the case shown here, we've converted the result of the method call to "
"a number in the range [0.0, 5.0).  Once more, these are uniformly "
"distributed numbers --- numbers close to 0 are just as likely to occur as"
" numbers close to 0.5, or numbers close to 1.0. If you continue to press "
"the run button you will see random values between 0.0 and up to but not "
"including 5.0."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:73
msgid ""
"It is important to note that random number generators are based on a "
"**deterministic** algorithm --- repeatable and predictable. So they're "
"called **pseudo-random** generators --- they are not genuinely random. "
"They start with a *seed* value. Each time you ask for another random "
"number, you'll get one based on the current seed attribute, and the state"
" of the seed (which is one of the attributes of the generator) will be "
"updated.  The good news is that each time you run your program, the seed "
"value is likely to be different meaning that even though the random "
"numbers are being created algorithmically, you will likely get random "
"behavior each time you execute."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:83
msgid "Lab"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:85
msgid ""
"`Sine Wave <../Labs/sinlab.html>`_ In this guided lab exercise we will "
"have the turtle plot a sine wave."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:87
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid "math.pi"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid "math(pi)"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid "pi.math"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid "math->pi"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid ""
"To invoke or reference something contained in a module you use the dot "
"(.) notation."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid ""
"This is the syntax for calling a function, not referencing an item in a "
"module."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid ""
"The module name must come first when accessing values and functions with "
"a module."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:101
msgid "The -> notation is not used in Python."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:100
msgid ""
"modules-4-1: Which of the following is the correct way to reference the "
"value pi within the math module.   Assume you have already imported the "
"math module."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid "the math module"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid "the random module"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid "the turtle module"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid "the game module"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid ""
"While you might want to use the math module for other numerical "
"computations in your program, it does not contain functions that are "
"likely to help you simulate a dice roll."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid "You would likely call the function random.randrange."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid ""
"The turtle module, while producing interesting graphics, is unlikely to "
"help you here."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:115
msgid "Python does not have a game module."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:113
msgid ""
"modules-4-2: Which module would you most likely use if you were writing a"
" function to simulate rolling dice?"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid "prob = random.randrange(1, 101)"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid "prob = random.randrange(1, 100)"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid "prob = random.randrange(0, 101)"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid "prob = random.randrange(0, 100)"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid "This will generate a number between 1 and 101, but does not include 101."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid ""
"This will generate a number between 1 and 100, but does not include 100."
"  The highest value generated will be 99."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid ""
"This will generate a number between 0 and 100.  The lowest value "
"generated is 0.  The highest value generated will be 100."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:128
msgid ""
"This will generate a number between 0 and 100, but does not include 100."
"  The lowest value generated is 0 and the highest value generated will be"
" 99."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:127
msgid ""
"modules-4-3: The correct code to generate a random number between 1 and "
"100 (inclusive) is:"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid "There is no computer on the stage for the drawing."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid ""
"Because computers don't really generate random numbers, they generate "
"pseudo-random numbers."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid "They would just generate the same numbers over and over again."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid ""
"The computer can't tell what values were already selected, so it might "
"generate all 5's instead of 5 unique numbers."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid "They could easily put one there."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid ""
"Computers generate random numbers using a deterministic algorithm.  This "
"means that if anyone ever found out the algorithm they could accurately "
"predict the next value to be generated and would always win the lottery."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid ""
"This might happen if the same seed value was used over and over again, "
"but they could make sure this was not the case."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:142
msgid ""
"While a programmer would need to ensure the computer did not select the "
"same number more than once, it is easy to ensure this."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:140
msgid ""
"modules-4-4: One reason that lotteries don't use computers to generate "
"random numbers is:"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:145
msgid ""
"This workspace is provided for your convenience.  You can use this "
"activecode window to try out anything you like."
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:71
msgid "deterministic algorithm"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:71
msgid "algorithm"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:71
msgid "deterministic"
msgstr ""

#: ../../_sources/PythonModules/Therandommodule.rst:71
msgid "unit tests"
msgstr ""

