# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 18:20-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/PythonModules/Themathmodule.rst:15
msgid "The `math` module"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:17
msgid ""
"The ``math`` module contains the kinds of mathematical functions you "
"would typically find on your calculator and some mathematical constants "
"like `pi` and `e`. As we noted above, when we ``import math``, we create "
"a reference to a module object that contains these elements."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:23
msgid ".. image:: PythonModules/Figures/mathmod.png"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:24
msgid ""
"Here are some items from the math module in action.  If you want more "
"information, you can check out the `Math Module "
"<http://docs.python.org/py3k/library/math.html#module-math>`_ Python "
"Documentation."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:44
msgid ""
"Notice another difference between this module and our use of ``turtle``. "
"In  ``turtle`` we create objects (either ``Turtle`` or ``Screen``) and "
"call methods on those objects.  Remember that a turtle is a data object "
"(recall ``alex`` and ``tess``).  We need to create one in order to use "
"it.  When we say ``alex = turtle.Turtle()``, we are calling the "
"constructor for the Turtle class which returns a single turtle object."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:50
msgid ""
"Mathematical functions do not need to be constructed.  They simply "
"perform a task. They are all housed together in a module called `math`.  "
"Once we have imported the math module, anything defined there can be used"
" in our program.  Notice that we always use the name of the module "
"followed by a `dot` followed by the specific item from the module "
"(``math.sqrt``).  You can think of this as lastname.firstname where the "
"lastname is the module family and the firstname is the individual entry "
"in the module."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:57
msgid ""
"If you have not done so already, take a look at the documentation for the"
" math module."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:60
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid "import math"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid "include math"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid "use math"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid "You don't need a statement.  You can always use the math module"
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid ""
"The module must be imported before you can use anything declared inside "
"the module."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid "The correct term is not include, but you are close."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid "You will be using parts of the module, but that is not the right term."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:75
msgid ""
"You cannot use a Python module without a statement at the top of your "
"program that explicitly tells Python you want to use the module."
msgstr ""

#: ../../_sources/PythonModules/Themathmodule.rst:73
msgid ""
"modules-3-1: Which statement allows you to use the math module in your "
"program?"
msgstr ""

