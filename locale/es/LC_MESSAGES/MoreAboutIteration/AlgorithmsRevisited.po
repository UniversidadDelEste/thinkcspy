# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 21:02-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:15
msgid "Algorithms Revisited"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:17
msgid ""
"Newton's method is an example of an **algorithm**: it is a mechanical "
"process for solving a category of problems (in this case, computing "
"square roots)."
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:20
msgid ""
"It is not easy to define an algorithm. It might help to start with "
"something that is not an algorithm. When you learned to multiply single-"
"digit numbers, you probably memorized the multiplication table.  In "
"effect, you memorized 100 specific solutions. That kind of knowledge is "
"not algorithmic."
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:25
msgid ""
"But if you were lazy, you probably cheated by learning a few tricks.  For"
" example, to find the product of n and 9, you can write n - 1 as the "
"first digit and 10 - n as the second digit. This trick is a general "
"solution for multiplying any single-digit number by 9. That's an "
"algorithm!"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:30
msgid ""
"Similarly, the techniques you learned for addition with carrying, "
"subtraction with borrowing, and long division are all algorithms. One of "
"the characteristics of algorithms is that they do not require any "
"intelligence to carry out. They are mechanical processes in which each "
"step follows from the last according to a simple set of rules."
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:36
msgid ""
"On the other hand, understanding that hard problems can be solved by "
"step-by-step algorithmic processess is one of the major simplifying "
"breakthroughs that has had enormous benefits.  So while the execution of "
"the algorithm may be boring and may require no intelligence, algorithmic "
"or computational thinking is having a vast impact.  It is the process of "
"designing algorithms that is interesting, intellectually challenging, and"
" a central part of what we call programming."
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:43
msgid ""
"Some of the things that people do naturally, without difficulty or "
"conscious thought, are the hardest to express algorithmically.  "
"Understanding natural language is a good example. We all do it, but so "
"far no one has been able to explain *how* we do it, at least not in the "
"form of a step-by-step mechanical algorithm."
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:58
msgid ""
"This workspace is provided for your convenience.  You can use this "
"activecode window to try out anything you like."
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:60
msgid "\n"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "table"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "logarithm"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "Intel"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "Pentium"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "escape sequence"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "tab"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "newline"
msgstr ""

#: ../../_sources/MoreAboutIteration/AlgorithmsRevisited.rst:52
msgid "cursor"
msgstr ""

