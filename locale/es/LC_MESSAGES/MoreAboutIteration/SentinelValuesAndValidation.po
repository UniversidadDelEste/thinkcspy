# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 14:52-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:15
msgid "Other uses of ``while``"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:18
msgid "Sentinel Values"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:20
msgid ""
"Indefinite loops are much more common in the real world than definite "
"loops."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:22
msgid ""
"If you are selling tickets to an event, you don't know in advance how "
"many tickets you will sell. You keep selling tickets as long as people "
"come to the door and there's room in the hall."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:25
msgid ""
"When the baggage crew unloads a plane, they don't know in advance how "
"many suitcases there are. They just keep unloading while there are bags "
"left in the cargo hold. (Why *your* suitcase is always the last one is an"
" entirely different problem.)"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:28
msgid ""
"When you go through the checkout line at the grocery, the clerks don't "
"know in advance how many items there are. They just keep ringing up items"
" as long as there are more on the conveyor belt."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:32
msgid ""
"Let's implement the last of these in Python, by asking the user for "
"prices and keeping a running total and count of items. When the last item"
" is entered, the program gives the grand total, number of items, and "
"average price. We'll need these variables:"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:37
msgid "``total`` - this will start at zero"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:38
msgid "``count`` - the number of items, which also starts at zero"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:39
msgid ""
"``moreItems`` - a boolean that tells us whether more items are waiting; "
"this starts as True"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:41
msgid ""
"The pseudocode (code written half in English, half in Python) for the "
"body of the loop looks something like this::"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:44
msgid ""
"while moreItems\n"
"    ask for price\n"
"    add price to total\n"
"    add one to count"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:49
msgid ""
"This pseudocode has no option to set ``moreItems`` to ``False``, so it "
"would run forever. In a grocery store, there's a little plastic bar that "
"you put after your last item to separate your groceries from those of the"
" person behind you; that's how the clerk knows you have no more items. We"
" don't have a \"little plastic bar\" data type in Python, so we'll do the"
" next best thing: we will use a ``price`` of zero to mean \"this is my "
"last item.\" In this program, zero is a **sentinel value**, a value used "
"to signal the end of the loop. Here's the code:"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:78
msgid "There are still a few problems with this program."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:80
msgid ""
"If you enter a negative number, it will be added to the total and count. "
"Modify the code so that negative numbers give an error message instead "
"(but don't end the loop) Hint: ``elif`` is your friend."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:83
msgid ""
"If you enter zero the first time you are asked for a price, the loop will"
" end, and the program will try to divide by zero. Use an ``if``/``else`` "
"statement outside the loop to avoid the division by zero and tell the "
"user that you can't compute an average without data."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:86
msgid ""
"This program doesn't display the amounts to two decimal places. In a "
"Python program, the ``format()`` function will do that, but it is not "
"implemented in ActiveCode, so unlike the first two problems, you can't do"
" anything about this one, sorry."
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:91
msgid "Validating Input"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:93
msgid ""
"You can also use a ``while`` loop when you want to **validate** input;  "
"when you want to make sure the user has entered valid input for a prompt."
" Let's say you want a function that asks a yes-or-no question. In this "
"case, you want to make sure that the person using your program enters "
"either a Y for yes or N for no (in either upper or lower case). Here is a"
" program that uses a ``while`` loop to keep asking until it receives a "
"valid answer. As a preview of coming attractions, it uses the ``upper()``"
" method which is described in :ref:`stringMethods` to convert a string to"
" upper case. When you run the following code, try typing something other "
"than Y or N to see how the code reacts:"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:122
msgid "validation"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:122
msgid "input"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:122
msgid "validating"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:122
msgid "sentinel value"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:122
msgid "value"
msgstr ""

#: ../../_sources/MoreAboutIteration/SentinelValuesAndValidation.rst:122
msgid "sentinel"
msgstr ""

