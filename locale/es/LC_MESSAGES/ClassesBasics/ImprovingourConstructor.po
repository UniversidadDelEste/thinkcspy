# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 14:52-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/ClassesBasics/ImprovingourConstructor.rst:11
msgid "Improving our Constructor"
msgstr ""

#: ../../_sources/ClassesBasics/ImprovingourConstructor.rst:13
msgid ""
"Our constructor so far can only create points at location ``(0,0)``.  To "
"create a point at position (7, 6) requires that we provide some "
"additional capability for the user to pass information to the "
"constructor.  Since constructors are simply specially named functions, we"
" can use parameters (as we've seen before) to provide the specific "
"information."
msgstr ""

#: ../../_sources/ClassesBasics/ImprovingourConstructor.rst:16
msgid ""
"We can make our class constructor more general by putting extra "
"parameters into the ``__init__`` method, as shown in this codelens "
"example."
msgstr ""

#: ../../_sources/ClassesBasics/ImprovingourConstructor.rst:32
msgid ""
"\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"chp13_improveconstructor\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\"> "
"(chp13_improveconstructor)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var chp13_improveconstructor_trace = {\"code\": \"class Point:\\n    "
"\\\"\\\"\\\" Point class for representing and manipulating x,y "
"coordinates. \\\"\\\"\\\"\\n\\n    def __init__(self, initX, initY):\\n"
"        \\\"\\\"\\\" Create a new point at the given coordinates. "
"\\\"\\\"\\\"\\n        self.x = initX\\n        self.y = initY\\n\\np = "
"Point(7, 6)\", \"trace\": [{\"ordered_globals\": [], \"stdout\": \"\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {}, "
"\"heap\": {}, \"line\": 1, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"Point\"], \"stdout\": \"\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"Point\": [\"REF\","
" 1]}, \"heap\": {\"1\": [\"CLASS\", \"Point\", [], [\"__init__\", "
"[\"REF\", 2]]], \"2\": [\"FUNCTION\", \"__init__(self, initX, initY)\", "
"null]}, \"line\": 9, \"event\": \"step_line\"}, {\"ordered_globals\": "
"[\"Point\"], \"stdout\": \"\", \"func_name\": \"__init__\", "
"\"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"self\": "
"[\"REF\", 3], \"initY\": 6, \"initX\": 7}, \"is_highlighted\": true, "
"\"is_parent\": false, \"func_name\": \"__init__\", \"is_zombie\": false, "
"\"parent_frame_id_list\": [], \"unique_hash\": \"__init___f1\", "
"\"ordered_varnames\": [\"self\", \"initX\", \"initY\"]}], \"globals\": "
"{\"Point\": [\"REF\", 1]}, \"heap\": {\"1\": [\"CLASS\", \"Point\", [], "
"[\"__init__\", [\"REF\", 2]]], \"2\": [\"FUNCTION\", \"__init__(self, "
"initX, initY)\", null], \"3\": [\"INSTANCE\", \"Point\"]}, \"line\": 4, "
"\"event\": \"call\"}, {\"ordered_globals\": [\"Point\"], \"stdout\": "
"\"\", \"func_name\": \"__init__\", \"stack_to_render\": [{\"frame_id\": "
"1, \"encoded_locals\": {\"self\": [\"REF\", 3], \"initY\": 6, \"initX\": "
"7}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": "
"\"__init__\", \"is_zombie\": false, \"parent_frame_id_list\": [], "
"\"unique_hash\": \"__init___f1\", \"ordered_varnames\": [\"self\", "
"\"initX\", \"initY\"]}], \"globals\": {\"Point\": [\"REF\", 1]}, "
"\"heap\": {\"1\": [\"CLASS\", \"Point\", [], [\"__init__\", [\"REF\", "
"2]]], \"2\": [\"FUNCTION\", \"__init__(self, initX, initY)\", null], "
"\"3\": [\"INSTANCE\", \"Point\"]}, \"line\": 6, \"event\": "
"\"step_line\"}, {\"ordered_globals\": [\"Point\"], \"stdout\": \"\", "
"\"func_name\": \"__init__\", \"stack_to_render\": [{\"frame_id\": 1, "
"\"encoded_locals\": {\"self\": [\"REF\", 3], \"initY\": 6, \"initX\": 7},"
" \"is_highlighted\": true, \"is_parent\": false, \"func_name\": "
"\"__init__\", \"is_zombie\": false, \"parent_frame_id_list\": [], "
"\"unique_hash\": \"__init___f1\", \"ordered_varnames\": [\"self\", "
"\"initX\", \"initY\"]}], \"globals\": {\"Point\": [\"REF\", 1]}, "
"\"heap\": {\"1\": [\"CLASS\", \"Point\", [], [\"__init__\", [\"REF\", "
"2]]], \"2\": [\"FUNCTION\", \"__init__(self, initX, initY)\", null], "
"\"3\": [\"INSTANCE\", \"Point\", [\"x\", 7]]}, \"line\": 7, \"event\": "
"\"step_line\"}, {\"ordered_globals\": [\"Point\"], \"stdout\": \"\", "
"\"func_name\": \"__init__\", \"stack_to_render\": [{\"frame_id\": 1, "
"\"encoded_locals\": {\"__return__\": null, \"self\": [\"REF\", 3], "
"\"initY\": 6, \"initX\": 7}, \"is_highlighted\": true, \"is_parent\": "
"false, \"func_name\": \"__init__\", \"is_zombie\": false, "
"\"parent_frame_id_list\": [], \"unique_hash\": \"__init___f1\", "
"\"ordered_varnames\": [\"self\", \"initX\", \"initY\", \"__return__\"]}],"
" \"globals\": {\"Point\": [\"REF\", 1]}, \"heap\": {\"1\": [\"CLASS\", "
"\"Point\", [], [\"__init__\", [\"REF\", 2]]], \"2\": [\"FUNCTION\", "
"\"__init__(self, initX, initY)\", null], \"3\": [\"INSTANCE\", \"Point\","
" [\"x\", 7], [\"y\", 6]]}, \"line\": 7, \"event\": \"return\"}, "
"{\"ordered_globals\": [\"Point\", \"p\"], \"stdout\": \"\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": "
"{\"p\": [\"REF\", 3], \"Point\": [\"REF\", 1]}, \"heap\": {\"1\": "
"[\"CLASS\", \"Point\", [], [\"__init__\", [\"REF\", 2]]], \"2\": "
"[\"FUNCTION\", \"__init__(self, initX, initY)\", null], \"3\": "
"[\"INSTANCE\", \"Point\", [\"x\", 7], [\"y\", 6]]}, \"line\": 9, "
"\"event\": \"return\"}]};\n"
"var chp13_improveconstructor_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        chp13_improveconstructor_vis = new "
"ExecutionVisualizer('chp13_improveconstructor',chp13_improveconstructor_trace,"
"\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: "
"redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        "
"attachLoggers(chp13_improveconstructor_vis,'chp13_improveconstructor');\n"
"        styleButtons('chp13_improveconstructor');\n"
"        allVisualizers.push(chp13_improveconstructor_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component "
"chp13_improveconstructor_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#chp13_improveconstructor_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', "
"'div_id':'chp13_improveconstructor'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (chp13_improveconstructor_vis) {\n"
"        chp13_improveconstructor_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
msgstr ""

#: ../../_sources/ClassesBasics/ImprovingourConstructor.rst:33
msgid ""
"Now when we create new points, we supply the x and y coordinates as "
"parameters.  When the point is created, the values of ``initX`` and "
"``initY`` are assigned to the state of the object."
msgstr ""

msgid ""
".. image:: ClassesBasics/Figures/objectpic5.png\n"
"   :alt: Simple object has state and methods"
msgstr ""

