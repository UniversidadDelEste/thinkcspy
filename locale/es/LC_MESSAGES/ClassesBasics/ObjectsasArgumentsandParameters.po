# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 13:36-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/ClassesBasics/ObjectsasArgumentsandParameters.rst:11
msgid "Objects as Arguments and Parameters"
msgstr ""

#: ../../_sources/ClassesBasics/ObjectsasArgumentsandParameters.rst:13
msgid ""
"You can pass an object as a argument in the usual way.  We've already "
"seen this in some of the turtle examples where we passed the turtle to "
"some function like ``drawRectangle`` so that the function could control "
"and use whatever turtle instance we passed to it."
msgstr ""

#: ../../_sources/ClassesBasics/ObjectsasArgumentsandParameters.rst:18
msgid ""
"Here is a simple function called ``distance`` involving our new ``Point``"
" objects.  The job of this function is to figure out the distance between"
" two points."
msgstr ""

#: ../../_sources/ClassesBasics/ObjectsasArgumentsandParameters.rst:54
msgid ""
"``distance`` takes two points and returns the distance between them.  "
"Note that ``distance`` is **not** a method of the Point class.  You can "
"see this by looking at the indentation pattern.  It is not inside the "
"class definition.  The other way we can know that ``distance`` is not a "
"method of Point is that ``self`` is not included as a formal parameter.  "
"In addition, we do not invoke ``distance`` using the dot notation."
msgstr ""

