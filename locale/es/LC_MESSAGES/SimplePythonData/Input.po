# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 18:20-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/SimplePythonData/Input.rst:15
msgid "Input"
msgstr ""

msgid ""
"<div id=\"inputvid\" class=\"video_popup\" >\n"
"<video controls preload=\"none\"  poster=\"../_static/inputthumb.png\">\n"
"    <source "
"src=\"http://media.interactivepython.org/thinkcsVideos/input.mov\" "
"type=\"video/mp4\"></source>\n"
"    <source "
"src=\"http://media.interactivepython.org/thinkcsVideos/input.webm\" "
"type=\"video/webm\"></source>\n"
"    No supported video types\n"
"</video>\n"
"</div>\n"
"<script>\n"
"   jQuery(function($) {\n"
"      var rb = new RunestoneBase();\n"
"      $('#inputvid_thumb').click(function(e) {\n"
"         $('#inputvid').show();\n"
"         $('#inputvid_thumb').hide();\n"
"         rb.logBookEvent({'event':'video','act':'play','div_id': "
"'inputvid'});\n"
"         // Log the run event\n"
"      });\n"
"      $('#inputvid video').one(\"click\", function(){\n"
"        this.play();\n"
"      });\n"
"      $('#inputvid video').one(\"play\", function(){\n"
"        rb.logBookEvent({'event':'video','act':'play','div_id': "
"'inputvid'});\n"
"      });\n"
"   });\n"
"</script>\n"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:25
msgid ""
"The program in the previous section works fine but is very limited in "
"that it only works with one value for ``total_secs``.  What if we wanted "
"to rewrite the program so that it was more general.  One thing we could "
"do is allow the user to enter any value they wish for the number of "
"seconds.  The program could then print the proper result for that "
"starting value."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:29
msgid ""
"In order to do this, we need a way to get **input** from the user.  "
"Luckily, in Python there is a built-in function to accomplish this task."
"  As you might expect, it is called ``input``."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:32
msgid "n = input(\"Please enter your name: \")"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:36
msgid ""
"The input function allows the user to provide a **prompt string**.  When "
"the function is evaluated, the prompt is shown. The user of the program "
"can enter the name and press `return`. When this happens the text that "
"has been entered is returned from the `input` function, and in this case "
"assigned to the variable `n`.  Make sure you run this example a number of"
" times and try some different names in the input box that appears."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:48
msgid ""
"It is very important to note that the ``input`` function returns a string"
" value.  Even if you asked the user to enter their age, you would get "
"back a string like ``\"17\"``.  It would be your job, as the programmer, "
"to convert that string into an int or a float, using the ``int`` or "
"``float`` converter functions we saw earlier."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:53
msgid ""
"To modify our previous program, we will add an input statement to allow "
"the user to enter the number of seconds.  Then we will convert that "
"string to an integer.  From there the process is the same as before.  To "
"complete the example, we will print some appropriate output."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:70
msgid ""
"The variable ``str_seconds`` will refer to the string that is entered by "
"the user. As we said above, even though this string may be ``7684``, it "
"is still a string and not a number.  To convert it to an integer, we use "
"the ``int`` function. The result is referred to by ``total_secs``.  Now, "
"each time you run the program, you can enter a new value for the number "
"of seconds to be converted."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:73
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid "&lt;class 'str'&gt;"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid "&lt;class 'int'&gt;"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid "&lt;class 18&gt;"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid "18"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid "All input from users is read in as a string."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid ""
"Even though the user typed in an integer, it does not come into the "
"program as an integer."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:94
msgid "18 is the value of what the user typed, not the type of the data."
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:86
msgid "data-8-1: What is printed when the following statements execute?"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:88
msgid ""
"n = input(\"Please enter your age: \")\n"
"# user types in 18\n"
"print ( type(n) )"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:95
msgid "order of operations"
msgstr ""

#: ../../_sources/SimplePythonData/Input.rst:95
msgid "rules of precedence"
msgstr ""

