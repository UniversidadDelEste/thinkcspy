# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 18:20-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Selection/Chainedconditionals.rst:15
msgid "Chained conditionals"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:17
msgid ""
"Python provides an alternative way to write nested selection such as the "
"one shown in the previous section. This is sometimes referred to as a "
"**chained conditional**"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:21
msgid ""
"if x < y:\n"
"    print(\"x is less than y\")\n"
"elif x > y:\n"
"    print(\"x is greater than y\")\n"
"else:\n"
"    print(\"x and y must be equal\")"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:30
msgid ""
"The flow of control can be drawn in a different orientation but the "
"resulting pattern is identical to the one shown above."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:33
msgid ".. image:: Selection/Figures/flowchart_chained_conditional.png"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:34
msgid ""
"``elif`` is an abbreviation of ``else if``. Again, exactly one branch "
"will be executed. There is no limit of the number of ``elif`` statements "
"but only a single (and optional) final ``else`` statement is allowed and "
"it must be the last branch in the statement."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:39
msgid ""
"Each condition is checked in order. If the first is false, the next is "
"checked, and so on. If one of them is true, the corresponding branch "
"executes, and the statement ends. Even if more than one condition is "
"true, only the first true branch executes."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:44
msgid "Here is the same program using ``elif``."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:63
msgid ""
"This workspace is provided for your convenience.  You can use this "
"activecode window to try out anything you like."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:68
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "I only"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "II only"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "III only"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "II and III"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "I, II, and III"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "You can not use a Boolean expression after an else."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "Yes, II will give the same result."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid ""
"No, III will not give the same result.  The first if statement will be "
"true, but the second will be false, so the else part will execute."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "No, Although II is correct III will not give the same result.  Try it."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:132
msgid "No, in I you can not have a Boolean expression after an else."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:83
msgid ""
"select-7-1: Which of I, II, and III below gives the same result as the "
"following nested if?"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:85
msgid ""
"# nested if-else statement\n"
"x = -10\n"
"if x < 0:\n"
"    print(\"The negative number \",  x, \" is not valid here.\")\n"
"else:\n"
"    if x > 0:\n"
"        print(x, \" is a positive number\")\n"
"    else:\n"
"        print(x, \" is 0\")"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:98
msgid ""
"I.\n"
"\n"
"if x < 0:\n"
"    print(\"The negative number \",  x, \" is not valid here.\")\n"
"else x > 0:\n"
"    print(x, \" is a positive number\")\n"
"else:\n"
"    print(x, \" is 0\")"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:110
msgid ""
"II.\n"
"\n"
"if x < 0:\n"
"    print(\"The negative number \",  x, \" is not valid here.\")\n"
"elif x > 0:\n"
"    print(x, \" is a positive number\")\n"
"else:\n"
"    print(x, \" is 0\")"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:121
msgid ""
"III.\n"
"\n"
"if x < 0:\n"
"    print(\"The negative number \",  x, \" is not valid here.\")\n"
"if x > 0:\n"
"    print(x, \" is a positive number\")\n"
"else:\n"
"    print(x, \" is 0\")"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:154
msgid "a"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:154
msgid "b"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:154
msgid "c"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:154
msgid ""
"While the value in x is less than the value in y (3 is less than 5) it is"
" not less than the value in z (3 is not less than 2)."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:154
msgid "The value in y is not less than the value in x (5 is not less than 3)."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:154
msgid ""
"Since the first two Boolean expressions are false the else will be "
"executed."
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:142
msgid "select-7-2: What will the following code print if x = 3, y = 5, and z = 2?"
msgstr ""

#: ../../_sources/Selection/Chainedconditionals.rst:144
msgid ""
"if x < y and x < z:\n"
"    print(\"a\")\n"
"elif y < x and y < z:\n"
"    print(\"b\")\n"
"else:\n"
"    print(\"c\")"
msgstr ""

