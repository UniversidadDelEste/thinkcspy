# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 14:52-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:15
msgid "Traversal and the ``while`` Loop"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:17
msgid ""
"The ``while`` loop can also control the generation of the index values.  "
"Remember that the programmer is responsible for setting up the initial "
"condition, making sure that the condition is correct, and making sure "
"that something changes inside the body to guarantee that the condition "
"will eventually fail."
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:35
msgid ""
"The loop condition is ``position < len(fruit)``, so when ``position`` is "
"equal to the length of the string, the condition is false, and the body "
"of the loop is not executed. The last character accessed is the one with "
"the index ``len(fruit)-1``, which is the last character in the string."
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:41
msgid ""
"Here is the same example in codelens so that you can trace the values of "
"the variables."
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:51
msgid ""
"\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"ch08_7c1\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\"> "
"(ch08_7c1)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var ch08_7c1_trace = {\"code\": \"fruit = \\\"apple\\\"\\n\\nposition = "
"0\\nwhile position < len(fruit):\\n    print(fruit[position])\\n    "
"position = position + 1\", \"trace\": [{\"ordered_globals\": [], "
"\"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], "
"\"globals\": {}, \"heap\": {}, \"line\": 1, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\"], \"stdout\": \"\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 3, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": \"\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": "
"{\"position\": 0, \"fruit\": \"apple\"}, \"heap\": {}, \"line\": 4, "
"\"event\": \"step_line\"}, {\"ordered_globals\": [\"fruit\", "
"\"position\"], \"stdout\": \"\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 0, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 5, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": \"a\\n\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": "
"{\"position\": 0, \"fruit\": \"apple\"}, \"heap\": {}, \"line\": 6, "
"\"event\": \"step_line\"}, {\"ordered_globals\": [\"fruit\", "
"\"position\"], \"stdout\": \"a\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 1, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 4, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": \"a\\n\", "
"\"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": "
"{\"position\": 1, \"fruit\": \"apple\"}, \"heap\": {}, \"line\": 5, "
"\"event\": \"step_line\"}, {\"ordered_globals\": [\"fruit\", "
"\"position\"], \"stdout\": \"a\\np\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 1, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 6, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": "
"\"a\\np\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], "
"\"globals\": {\"position\": 2, \"fruit\": \"apple\"}, \"heap\": {}, "
"\"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"fruit\","
" \"position\"], \"stdout\": \"a\\np\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 2, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 5, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": "
"\"a\\np\\np\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], "
"\"globals\": {\"position\": 2, \"fruit\": \"apple\"}, \"heap\": {}, "
"\"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"fruit\","
" \"position\"], \"stdout\": \"a\\np\\np\\n\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"position\": 3, "
"\"fruit\": \"apple\"}, \"heap\": {}, \"line\": 4, \"event\": "
"\"step_line\"}, {\"ordered_globals\": [\"fruit\", \"position\"], "
"\"stdout\": \"a\\np\\np\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 3, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 5, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": "
"\"a\\np\\np\\nl\\n\", \"func_name\": \"<module>\", \"stack_to_render\": "
"[], \"globals\": {\"position\": 3, \"fruit\": \"apple\"}, \"heap\": {}, "
"\"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"fruit\","
" \"position\"], \"stdout\": \"a\\np\\np\\nl\\n\", \"func_name\": "
"\"<module>\", \"stack_to_render\": [], \"globals\": {\"position\": 4, "
"\"fruit\": \"apple\"}, \"heap\": {}, \"line\": 4, \"event\": "
"\"step_line\"}, {\"ordered_globals\": [\"fruit\", \"position\"], "
"\"stdout\": \"a\\np\\np\\nl\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 4, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 5, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": "
"\"a\\np\\np\\nl\\ne\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 4, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 6, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": "
"\"a\\np\\np\\nl\\ne\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 5, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 4, \"event\": \"step_line\"}, "
"{\"ordered_globals\": [\"fruit\", \"position\"], \"stdout\": "
"\"a\\np\\np\\nl\\ne\\n\", \"func_name\": \"<module>\", "
"\"stack_to_render\": [], \"globals\": {\"position\": 5, \"fruit\": "
"\"apple\"}, \"heap\": {}, \"line\": 4, \"event\": \"return\"}]};\n"
"var ch08_7c1_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        ch08_7c1_vis = new ExecutionVisualizer('ch08_7c1',ch08_7c1_trace,"
"\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: "
"redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        attachLoggers(ch08_7c1_vis,'ch08_7c1');\n"
"        styleButtons('ch08_7c1');\n"
"        allVisualizers.push(ch08_7c1_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component "
"ch08_7c1_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#ch08_7c1_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', "
"'div_id':'ch08_7c1'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (ch08_7c1_vis) {\n"
"        ch08_7c1_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:52
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:64
msgid ""
"strings-12-1: How many times is the letter o printed by the following "
"statements?"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:66
msgid ""
"s = \"python rocks\"\n"
"idx = 1\n"
"while idx < len(s):\n"
"    print(s[idx])\n"
"    idx = idx + 2"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:77
msgid ""
"This workspace is provided for your convenience.  You can use this "
"activecode window to try out anything you like."
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:83
msgid "in operator"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:83
msgid "operator"
msgstr ""

#: ../../_sources/Strings/TraversalandthewhileLoop.rst:83
msgid "in"
msgstr ""

