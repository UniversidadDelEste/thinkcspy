# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 21:02-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Strings/Theinandnotinoperators.rst:15
msgid "The ``in`` and ``not in`` operators"
msgstr ""

#: ../../_sources/Strings/Theinandnotinoperators.rst:17
msgid "The ``in`` operator tests if one string is a substring of another:"
msgstr ""

#: ../../_sources/Strings/Theinandnotinoperators.rst:25
msgid ""
"print('p' in 'apple')\n"
"print('i' in 'apple')\n"
"print('ap' in 'apple')\n"
"print('pa' in 'apple')"
msgstr ""

#: ../../_sources/Strings/Theinandnotinoperators.rst:26
msgid ""
"Note that a string is a substring of itself, and the empty string is a "
"substring of any other string. (Also note that computer scientists like "
"to think about these edge cases quite carefully!)"
msgstr ""

#: ../../_sources/Strings/Theinandnotinoperators.rst:36
msgid ""
"print('a' in 'a')\n"
"print('apple' in 'apple')\n"
"print('' in 'a')\n"
"print('' in 'apple')"
msgstr ""

#: ../../_sources/Strings/Theinandnotinoperators.rst:37
msgid "The ``not in`` operator returns the logical opposite result of ``in``."
msgstr ""

#: ../../_sources/Strings/Theinandnotinoperators.rst:42
msgid "print('x' not in 'apple')"
msgstr ""

