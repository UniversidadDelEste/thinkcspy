# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone
# Interactive
# This file is distributed under the same license as the How to Think Like a
# Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 13:36-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Strings/Optionalparameters.rst:15
msgid "Optional parameters"
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:17
msgid ""
"To find the locations of the second or third occurrence of a character in"
" a string, we can modify the ``find`` function, adding a third parameter "
"for the starting position in the search string:"
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:43
msgid ""
"The call ``find2('banana', 'a', 2)`` now returns ``3``, the index of the "
"first occurrence of 'a' in 'banana' after index 2. What does "
"``find2('banana', 'n', 3)`` return? If you said, 4, there is a good "
"chance you understand how ``find2`` works.  Try it."
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:48
msgid ""
"Better still, we can combine ``find`` and ``find2`` using an **optional "
"parameter**."
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:72
msgid ""
"The call ``find3('banana', 'a', 2)`` to this version of ``find`` behaves "
"just like ``find2``, while in the call ``find3('banana', 'a')``, "
"``start`` will be set to the **default value** of ``0``."
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:76
msgid ""
"Adding another optional parameter to ``find`` makes it search from a "
"starting position, up to but not including the end position."
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:110
msgid ""
"The optional value for ``end`` is interesting.  We give it a default "
"value ``None`` if the caller does not supply any argument.  In the body "
"of the function we test what ``end`` is and if the caller did not supply "
"any argument, we reassign ``end`` to be the length of the string. If the "
"caller has supplied an argument for ``end``, however, the caller's value "
"will be used in the loop."
msgstr ""

#: ../../_sources/Strings/Optionalparameters.rst:115
msgid ""
"The semantics of ``start`` and ``end`` in this function are precisely the"
" same as they are in the ``range`` function."
msgstr ""

