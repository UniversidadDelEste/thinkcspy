# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 21:02-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Strings/StringComparison.rst:15
msgid "String Comparison"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:17
msgid "The comparison operators also work on strings. To see if two strings are equal you simply write a boolean expression using the equality operator."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:27
#: ../../_sources/Strings/StringComparison.rst:44
#: ../../_sources/Strings/StringComparison.rst:55
#: ../../_sources/Strings/StringComparison.rst:68
#: ../../_sources/Strings/StringComparison.rst:86
msgid ""
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:27
msgid "word = \"banana\"\n"
"if word == \"banana\":\n"
"    print(\"Yes, we have bananas!\")\n"
"else:\n"
"    print(\"Yes, we have NO bananas!\")"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:28
msgid "Other comparison operations are useful for putting words in `lexicographical order <http://en.wikipedia.org/wiki/Lexicographic_order>`__. This is similar to the alphabetical order you would use with a dictionary, except that all the uppercase letters come before all the lowercase letters."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:44
msgid "word = \"zebra\"\n"
"\n"
"if word < \"banana\":\n"
"    print(\"Your word, \" + word + \", comes before banana.\")\n"
"elif word > \"banana\":\n"
"    print(\"Your word, \" + word + \", comes after banana.\")\n"
"else:\n"
"    print(\"Yes, we have no bananas!\")"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:45
msgid "It is probably clear to you that the word `apple` would be less than (come before) the word ``banana``. After all, `a` is before `b` in the alphabet.  But what if we consider the words ``apple`` and ``Apple``? Are they the same?"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:55
msgid "print(\"apple\" < \"banana\")\n"
"\n"
"print(\"apple\" == \"Apple\")\n"
"print(\"apple\" < \"Apple\")"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:56
msgid "It turns out, as you recall from our discussion of variable names, that uppercase and lowercase letters are considered to be different from one another.  The way the computer knows they are different is that each character is assigned a unique integer value.  \"A\" is 65, \"B\" is 66, and \"5\" is 53.  The way you can find out the so-called **ordinal value** for a given character is to use a character function called ``ord``."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:68
msgid "print(ord(\"A\"))\n"
"print(ord(\"B\"))\n"
"print(ord(\"5\"))\n"
"\n"
"print(ord(\"a\"))\n"
"print(\"apple\" > \"Apple\")"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:69
msgid "When you compare characters or strings to one another, Python converts the characters into their equivalent ordinal values and compares the integers from left to right.  As you can see from the example above, \"a\" is greater than \"A\" so \"apple\" is greater than \"Apple\"."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:71
msgid "Humans commonly ignore capitalization when comparing two words.  However, computers do not.  A common way to address this issue is to convert strings to a standard format, such as all lowercase, before performing the comparison."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:74
msgid "There is also a similar function called ``chr`` that converts integers into their character equivalent."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:86
msgid "print(chr(65))\n"
"print(chr(66))\n"
"\n"
"print(chr(49))\n"
"print(chr(53))\n"
"\n"
"print(\"The character for 32 is\", chr(32), \"!!!\")\n"
"print(ord(\" \"))"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:87
msgid "One thing to note in the last two examples is the fact that the space character has an ordinal value (32).  Even though you don't see it, it is an actual character.  We sometimes call it a *nonprinting* character."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:89
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:105
#: ../../_sources/Strings/StringComparison.rst:122
#: ../../_sources/Strings/StringComparison.rst:138
msgid "True"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:105
#: ../../_sources/Strings/StringComparison.rst:122
#: ../../_sources/Strings/StringComparison.rst:138
msgid "False"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:105
msgid "Both match up to the g but Dog is shorter than Doghouse so it comes first in the dictionary."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:105
msgid "Strings are compared character by character."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:98
msgid "strings-8-1: Evaluate the following comparison:"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:100
msgid "\"Dog\" < \"Doghouse\""
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:122
msgid "They are the same word"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:122
msgid "d is greater than D according to the ord function (68 versus 100)."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:122
msgid "Yes, upper case is less than lower case according to the ordinal values of the characters."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:122
msgid "Python is case sensitive meaning that upper case and lower case characters are different."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:115
msgid "strings-8-2: Evaluate the following comparison:"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:117
msgid "\"dog\" < \"Dog\""
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:138
msgid "d is greater than D."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:138
msgid "The length does not matter.  Lower case d is greater than upper case D."
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:130
msgid "strings-8-3: Evaluate the following comparison:"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:132
msgid "\"dog\" < \"Doghouse\""
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:139
msgid "mutable"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:139
msgid "immutable"
msgstr ""

#: ../../_sources/Strings/StringComparison.rst:139
msgid "runtime error"
msgstr ""

