# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 15:11-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Strings/ACollectionDataType.rst:15
msgid "A Collection Data Type"
msgstr ""

#: ../../_sources/Strings/ACollectionDataType.rst:17
msgid "So far we have seen built-in types like: ``int``, ``float``, ``bool``, ``str`` and we've seen lists. ``int``, ``float``, and ``bool`` are considered to be simple or primitive data types because their values are not composed of any smaller parts.  They cannot be broken down. On the other hand, strings and lists are different from the others because they are made up of smaller pieces.  In the case of strings, they are made up of smaller strings each containing one **character**."
msgstr ""

#: ../../_sources/Strings/ACollectionDataType.rst:26
msgid "Types that are comprised of smaller pieces are called **collection data types**. Depending on what we are doing, we may want to treat a collection data type as a single entity (the whole), or we may want to access its parts. This ambiguity is useful."
msgstr ""

#: ../../_sources/Strings/ACollectionDataType.rst:30
msgid "Strings can be defined as sequential collections of characters.  This means that the individual characters that make up the string are assumed to be in a particular order from left to right."
msgstr ""

#: ../../_sources/Strings/ACollectionDataType.rst:33
msgid "A string that contains no characters, often referred to as the **empty string**, is still considered to be a string.  It is simply a sequence of zero characters and is represented by '' or \"\" (two single or two double quotes with nothing in between)."
msgstr ""

#: ../../_sources/Strings/ACollectionDataType.rst:35
msgid "string operations"
msgstr ""

#: ../../_sources/Strings/ACollectionDataType.rst:35
msgid "concatenation"
msgstr ""

