# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 13:50-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:15
msgid "Index Operator: Working with the Characters of a String"
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:17
msgid "The **indexing operator** (Python uses square brackets to enclose the index) selects a single character from a string.  The characters are accessed by their position or index value.  For example, in the string shown below, the 14 characters are indexed left to right from postion 0 to position 13."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:25
msgid "It is also the case that the positions are named from right to left using negative numbers where -1 is the rightmost index and so on. Note that the character at index 6 (or -8) is the blank character."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:39
msgid "The expression ``school[2]`` selects the character at index 2 from ``school``, and creates a new string containing just this one character. The variable ``m`` refers to the result."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:42
msgid "Remember that computer scientists often start counting from zero. The letter at index zero of ``\"Luther College\"`` is ``L``.  So at position ``[2]`` we have the letter ``t``."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:46
msgid "If you want the zero-eth letter of a string, you just put 0, or any expression with the value 0, in the brackets.  Give it a try."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:49
msgid "The expression in brackets is called an **index**. An index specifies a member of an ordered collection.  In this case the collection of characters in the string. The index *indicates* which character you want. It can be any integer expression so long as it evaluates to a valid index value."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:54
msgid "Note that indexing returns a *string* --- Python has no special type for a single character. It is just a string of length 1."
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:57
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:71
msgid "strings-4-1: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Strings/IndexOperatorWorkingwiththeCharactersofaString.rst:93
msgid "strings-4-2: What is printed by the following statements?"
msgstr ""

