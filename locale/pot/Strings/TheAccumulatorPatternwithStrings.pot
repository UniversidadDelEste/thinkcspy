# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 15:11-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:15
msgid "The Accumulator Pattern with Strings"
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:18
msgid "Combining the ``in`` operator with string concatenation using ``+`` and the accumulator pattern, we can write a function that removes all the vowels from a string.  The idea is to start with a string and iterate over each character, checking to see if the character is a vowel.  As we process the characters, we will build up a new string consisting of only the nonvowel characters.  To do this, we use the accumulator pattern."
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:21
msgid "Remember that the accumulator pattern allows us to keep a \"running total\".  With strings, we are not accumulating a numeric total.  Instead we are accumulating characters onto a string."
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:36
msgid "Line 5 uses the ``not in`` operator to check whether the current character is not in the string ``vowels``. The alternative to using this operator would be to write a very large ``if`` statement that checks each of the individual vowel characters.  Note we would need to use logical ``and`` to be sure that the character is not any of the vowels."
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:38
msgid "if eachChar != 'a'  and eachChar != 'e'  and eachChar != 'i'  and\n"
"   eachChar != 'o'  and eachChar != 'u'  and eachChar != 'A'  and\n"
"   eachChar != 'E'  and eachChar != 'I'  and eachChar != 'O'  and\n"
"   eachChar != 'U':\n"
"\n"
"     sWithoutVowels = sWithoutVowels + eachChar"
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:50
msgid "Look carefully at line 6 in the above program (``sWithoutVowels = sWithoutVowels + eachChar``).  We will do this for every character that is not a vowel.  This should look very familiar.  As we were describing earlier, it is an example of the accumulator pattern, this time using a string to \"accumulate\" the final result. In words it says that the new value of ``sWithoutVowels`` will be the old value of ``sWithoutVowels`` concatenated with the value of ``eachChar``.  We are building the result string character by character."
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:55
msgid "Take a close look also at the initialization of ``sWithoutVowels``.  We start with an empty string and then begin adding new characters to the end."
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:58
msgid "Step through the function using codelens to see the accumulator variable grow."
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:71
msgid "\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"ch08_acc2\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\"> (ch08_acc2)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var ch08_acc2_trace = {\"code\": \"def removeVowels(s):\\n    vowels = \\\"aeiouAEIOU\\\"\\n    sWithoutVowels = \\\"\\\"\\n    for eachChar in s:\\n        if eachChar not in vowels:\\n            sWithoutVowels = sWithoutVowels + eachChar\\n    return sWithoutVowels\\n\\nprint(removeVowels(\\\"compsci\\\"))\", \"trace\": [{\"ordered_globals\": [], \"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {}, \"heap\": {}, \"line\": 1, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 9, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 1, \"event\": \"call\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 2, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"vowels\": \"aeiouAEIOU\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 3, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"c\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"c\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"c\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"c\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"o\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"c\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"o\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"c\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"m\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"c\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"m\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"c\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"m\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cm\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"p\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cm\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"p\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cm\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"p\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmp\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"s\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmp\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"s\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmp\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"s\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmps\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"c\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmps\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"c\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmps\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"c\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmpsc\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"i\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmpsc\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 5, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"i\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmpsc\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 4, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"s\": \"compsci\", \"eachChar\": \"i\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmpsc\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 7, \"event\": \"step_line\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"\", \"func_name\": \"removeVowels\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"__return__\": \"cmpsc\", \"s\": \"compsci\", \"eachChar\": \"i\", \"vowels\": \"aeiouAEIOU\", \"sWithoutVowels\": \"cmpsc\"}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeVowels\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeVowels_f1\", \"ordered_varnames\": [\"s\", \"vowels\", \"sWithoutVowels\", \"eachChar\", \"__return__\"]}], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 7, \"event\": \"return\"}, {\"ordered_globals\": [\"removeVowels\"], \"stdout\": \"cmpsc\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"removeVowels\": [\"REF\", 1]}, \"heap\": {\"1\": [\"FUNCTION\", \"removeVowels(s)\", null]}, \"line\": 9, \"event\": \"return\"}]};\n"
"var ch08_acc2_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        ch08_acc2_vis = new ExecutionVisualizer('ch08_acc2',ch08_acc2_trace,\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        attachLoggers(ch08_acc2_vis,'ch08_acc2');\n"
"        styleButtons('ch08_acc2');\n"
"        allVisualizers.push(ch08_acc2_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component ch08_acc2_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#ch08_acc2_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', 'div_id':'ch08_acc2'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (ch08_acc2_vis) {\n"
"        ch08_acc2_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
""
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:72
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:83
msgid "strings-14-1: What is printed by the following statements:"
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:85
msgid "s = \"ball\"\n"
"r = \"\"\n"
"for item in s:\n"
"    r = item.upper() + r\n"
"print(r)"
msgstr ""

#: ../../_sources/Strings/TheAccumulatorPatternwithStrings.rst:96
msgid "This workspace is provided for your convenience.  You can use this activecode window to try out anything you like."
msgstr ""

