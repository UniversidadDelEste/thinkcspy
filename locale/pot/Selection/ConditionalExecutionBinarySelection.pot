# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 15:11-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:15
msgid "Conditional Execution: Binary Selection"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:None
msgid "<div id=\"binaryselection\" class=\"video_popup\" >\n"
"<video controls preload=\"none\"  poster=\"../_static/binaryselection.png\">\n"
"    <source src=\"http://media.interactivepython.org/thinkcsVideos/binaryselection.mov\" type=\"video/mp4\"></source>\n"
"    <source src=\"http://media.interactivepython.org/thinkcsVideos/binaryselection.webm\" type=\"video/webm\"></source>\n"
"    No supported video types\n"
"</video>\n"
"</div>\n"
"<script>\n"
"   jQuery(function($) {\n"
"      var rb = new RunestoneBase();\n"
"      $('#binaryselection_thumb').click(function(e) {\n"
"         $('#binaryselection').show();\n"
"         $('#binaryselection_thumb').hide();\n"
"         rb.logBookEvent({'event':'video','act':'play','div_id': 'binaryselection'});\n"
"         // Log the run event\n"
"      });\n"
"      $('#binaryselection video').one(\"click\", function(){\n"
"        this.play();\n"
"      });\n"
"      $('#binaryselection video').one(\"play\", function(){\n"
"        rb.logBookEvent({'event':'video','act':'play','div_id': 'binaryselection'});\n"
"      });\n"
"   });\n"
"</script>\n"
""
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:25
msgid "In order to write useful programs, we almost always need the ability to check conditions and change the behavior of the program accordingly. **Selection statements**, sometimes also referred to as **conditional statements**, give us this ability. The simplest form of selection is the **if statement**. This is sometimes referred to as **binary selection** since there are two possible paths of execution."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:40
msgid "The syntax for an ``if`` statement looks like this:"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:42
msgid "if BOOLEAN EXPRESSION:\n"
"    STATEMENTS_1        # executed if condition evaluates to True\n"
"else:\n"
"    STATEMENTS_2        # executed if condition evaluates to False"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:49
msgid "The boolean expression after the ``if`` statement is called the **condition**. If it is true, then the indented statements get executed. If not, then the statements indented under the `else` clause get executed."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:0
msgid ".. image:: Selection/Figures/flowchart_if_else.png"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:59
msgid "As with the function definition from the last chapter and other compound statements like ``for``, the ``if`` statement consists of a header line and a body. The header line begins with the keyword ``if`` followed by a *boolean expression* and ends with a colon (:)."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:64
msgid "The indented statements that follow are called a **block**. The first unindented statement marks the end of the block."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:67
msgid "Each of the statements inside the first block of statements is executed in order if the boolean expression evaluates to ``True``. The entire first block of statements is skipped if the boolean expression evaluates to ``False``, and instead all the statements under the ``else`` clause are executed."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:72
msgid "There is no limit on the number of statements that can appear under the two clauses of an ``if`` statement, but there has to be at least one statement in each block."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:76
msgid "Lab"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:78
msgid "`Approximating Pi with Simulation <../Labs/montepi.html>`_ In this guided lab exercise we will work through a problem solving exercise related to approximating the value of pi using random numbers."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:83
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:96
msgid "select-4-1: How many statements can appear in each block (the if and the else) in a conditional statement?"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:109
msgid "select-4-2: What does the following code print (choose from output a, b, c or nothing)."
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:111
msgid "if 4 + 5 == 10:\n"
"    print(\"TRUE\")\n"
"else:\n"
"    print(\"FALSE\")"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:130
msgid "select-4-3: What does the following code print?"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:132
msgid "if 4 + 5 == 10:\n"
"    print(\"TRUE\")\n"
"else:\n"
"    print(\"FALSE\")\n"
"print(\"TRUE\")"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:158
msgid "alternative execution"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:158
msgid "branch"
msgstr ""

#: ../../_sources/Selection/ConditionalExecutionBinarySelection.rst:158
msgid "wrapping code in a function"
msgstr ""

