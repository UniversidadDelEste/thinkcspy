# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 21:02-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Lists/ListMethods.rst:15
msgid "List Methods"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:17
msgid "The dot operator can also be used to access built-in methods of list objects. ``append`` is a list method which adds the argument passed to it to the end of the list. Continuing with this example, we show several other list methods.  Many of them are easy to understand."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:50
#: ../../_sources/Lists/ListMethods.rst:98
#: ../../_sources/Lists/ListMethods.rst:185
msgid ""
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:50
msgid "mylist = []\n"
"mylist.append(5)\n"
"mylist.append(27)\n"
"mylist.append(3)\n"
"mylist.append(12)\n"
"print(mylist)\n"
"\n"
"mylist.insert(1, 12)\n"
"print(mylist)\n"
"print(mylist.count(12))\n"
"\n"
"print(mylist.index(3))\n"
"print(mylist.count(5))\n"
"\n"
"mylist.reverse()\n"
"print(mylist)\n"
"\n"
"mylist.sort()\n"
"print(mylist)\n"
"\n"
"mylist.remove(5)\n"
"print(mylist)\n"
"\n"
"lastitem = mylist.pop()\n"
"print(lastitem)\n"
"print(mylist)"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:51
msgid "There are two ways to use the ``pop`` method.  The first, with no parameter, will remove and return the last item of the list.  If you provide a parameter for the position, ``pop`` will remove and return the item at that position.  Either way the list is changed."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:55
msgid "The following table provides a summary of the list methods shown above.  The column labeled `result` gives an explanation as to what the return value is as it relates to the new value of the list.  The word **mutator** means that the list is changed by the method but nothing is returned (actually ``None`` is returned).  A **hybrid** method is one that not only changes the list but also returns a value as its result.  Finally, if the result is simply a return, then the list is unchanged by the method."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:60
msgid "Be sure to experiment with these methods to gain a better understanding of what they do."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:67
msgid "Method"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:67
msgid "Parameters"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:67
msgid "Result"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:67
msgid "Description"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:69
msgid "append"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:69
#: ../../_sources/Lists/ListMethods.rst:75
#: ../../_sources/Lists/ListMethods.rst:76
#: ../../_sources/Lists/ListMethods.rst:77
msgid "item"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:69
#: ../../_sources/Lists/ListMethods.rst:70
#: ../../_sources/Lists/ListMethods.rst:73
#: ../../_sources/Lists/ListMethods.rst:74
#: ../../_sources/Lists/ListMethods.rst:77
msgid "mutator"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:69
msgid "Adds a new item to the end of a list"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:70
msgid "insert"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:70
msgid "position, item"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:70
msgid "Inserts a new item at the position given"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:71
#: ../../_sources/Lists/ListMethods.rst:72
msgid "pop"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:71
#: ../../_sources/Lists/ListMethods.rst:73
#: ../../_sources/Lists/ListMethods.rst:74
msgid "none"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:71
#: ../../_sources/Lists/ListMethods.rst:72
msgid "hybrid"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:71
msgid "Removes and returns the last item"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:72
msgid "position"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:72
msgid "Removes and returns the item at position"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:73
msgid "sort"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:73
msgid "Modifies a list to be sorted"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:74
msgid "reverse"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:74
msgid "Modifies a list to be in reverse order"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:75
msgid "index"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:75
msgid "return idx"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:75
msgid "Returns the position of first occurrence of item"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:76
msgid "count"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:76
msgid "return ct"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:76
msgid "Returns the number of occurrences of item"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:77
msgid "remove"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:77
msgid "Removes the first occurrence of item"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:81
msgid "Details for these and others can be found in the `Python Documentation <http://docs.python.org/py3k/library/stdtypes.html#sequence-types-str-bytes-bytearray-list-tuple-range>`_."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:84
msgid "It is important to remember that methods like ``append``, ``sort``, and ``reverse`` all return ``None``.  This means that re-assigning ``mylist`` to the result of sorting ``mylist`` will result in losing the entire list.  Calls like these will likely never appear as part of an assignment statement (see line 8 below)."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:98
msgid "mylist = []\n"
"mylist.append(5)\n"
"mylist.append(27)\n"
"mylist.append(3)\n"
"mylist.append(12)\n"
"print(mylist)\n"
"\n"
"mylist = mylist.sort()   #probably an error\n"
"print(mylist)"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:99
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:120
msgid "[4, 2, 8, 6, 5, False, True]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:120
msgid "[4, 2, 8, 6, 5, True, False]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:120
msgid "[True, False, 4, 2, 8, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:120
msgid "True was added first, then False was added last."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:120
msgid "Yes, each item is added to the end of the list."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:120
msgid "append adds at the end, not the beginning."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:110
msgid "list-14-1: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:112
msgid "alist = [4, 2, 8, 6, 5]\n"
"alist.append(True)\n"
"alist.append(False)\n"
"print(alist)"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:139
msgid "[False, 4, 2, True, 8, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:139
msgid "[4, False, True, 2, 8, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:139
msgid "[False, 2, True, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:139
msgid "Yes, first True was added at index 2, then False was added at index 0."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:139
msgid "insert will place items at the index position specified and move everything down to the right."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:139
msgid "insert does not remove anything or replace anything."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:130
msgid "list-14-2: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:132
msgid "alist = [4, 2, 8, 6, 5]\n"
"alist.insert(2, True)\n"
"alist.insert(0, False)\n"
"print(alist)"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:159
msgid "[4, 8, 6]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:159
msgid "[2, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:159
msgid "[4, 2, 6]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:159
msgid "pop(2) removes the item at index 2, not the 2 itself."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:159
msgid "pop() removes the last item, not the first."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:159
msgid "Yes, first the 8 was removed, then the last item, which was 5."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:149
msgid "list-14-3: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:151
msgid "alist = [4, 2, 8, 6, 5]\n"
"temp = alist.pop(2)\n"
"temp = alist.pop()\n"
"print(alist)"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "[2, 8, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "[4, 2, 8, 6, 5]"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "4"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "None"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "alist is now the value that was returned from pop(0)."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "pop(0) changes the list by removing the first item."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "Yes, first the 4 was removed from the list, then returned and assigned to alist.  The list is lost."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:180
msgid "pop(0) returns the first item in the list so alist has now been changed."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:171
msgid "list-14-4: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:173
msgid "alist = [4, 2, 8, 6, 5]\n"
"alist = alist.pop(0)\n"
"print(alist)"
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:183
msgid "This workspace is provided for your convenience.  You can use this activecode window to try out anything you like."
msgstr ""

#: ../../_sources/Lists/ListMethods.rst:185
msgid "\n"
""
msgstr ""

