# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 13:50-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Lists/RepetitionandReferences.rst:15
msgid "Repetition and References"
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:17
msgid "We have already seen the repetition operator working on strings as well as lists.  For example,"
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:24
msgid "With a list, the repetition operator creates copies of the references.  Although this may seem simple enough, when we allow a list to refer to another list, a subtle problem can arise."
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:26
msgid "Consider the following extension on the previous example."
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:37
msgid "``newlist`` is a list of three references to ``origlist`` that were created by the repetition operator.  The reference diagram is shown below."
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:47
msgid "Now, what happens if we modify a value in ``origlist``."
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:62
msgid "``newlist`` shows the change in three places.  This can easily be seen by noting that in the reference diagram, there is only one ``origlist``, so any changes to it appear in all three references from ``newlist``."
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:67
msgid "Here is the same example in codelens.  Step through the code paying particular attention to the result of executing the assignment statement ``origlist[1] = 99``."
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:82
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:93
msgid "list-13-1: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Lists/RepetitionandReferences.rst:114
msgid "list-13-2: What is printed by the following statements?"
msgstr ""

