# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-25 15:11-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Lists/StringsandLists.rst:15
msgid "Strings and Lists"
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:17
msgid "Two of the most useful methods on strings involve lists of strings. The ``split`` method breaks a string into a list of words.  By default, any number of whitespace characters is considered a word boundary."
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:28
msgid "An optional argument called a **delimiter** can be used to specify which characters to use as word boundaries. The following example uses the string ``ai`` as the delimiter:"
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:38
msgid "Notice that the delimiter doesn't appear in the result."
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:40
msgid "The inverse of the ``split`` method is ``join``.  You choose a desired **separator** string, (often called the *glue*) and join the list with the glue between each of the elements."
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:56
msgid "The list that you glue together (``wds`` in this example) is not modified.  Also, you can use empty glue or multi-character strings as glue."
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:61
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:74
msgid "list-24-1: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Lists/StringsandLists.rst:76
msgid "myname = \"Edgar Allan Poe\"\n"
"namelist = myname.split()\n"
"init = \"\"\n"
"for aname in namelist:\n"
"    init = init + aname[0]\n"
"print(init)"
msgstr ""

