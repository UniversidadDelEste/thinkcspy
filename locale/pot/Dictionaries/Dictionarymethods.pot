# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 21:02-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Dictionaries/Dictionarymethods.rst:15
msgid "Dictionary Methods"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:17
msgid "Dictionaries have a number of useful built-in methods. The following table provides a summary and more details can be found in the `Python Documentation <http://docs.python.org/py3k/library/stdtypes.html#mapping-types-dict>`_."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:22
msgid "Method"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:22
msgid "Parameters"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:22
msgid "Description"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:24
msgid "keys"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:24
#: ../../_sources/Dictionaries/Dictionarymethods.rst:25
#: ../../_sources/Dictionaries/Dictionarymethods.rst:26
msgid "none"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:24
msgid "Returns a view of the keys in the dictionary"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:25
msgid "values"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:25
msgid "Returns a view of the values in the dictionary"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:26
msgid "items"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:26
msgid "Returns a view of the key-value pairs in the dictionary"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:27
#: ../../_sources/Dictionaries/Dictionarymethods.rst:28
msgid "get"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:27
msgid "key"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:27
msgid "Returns the value associated with key; None otherwise"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:28
msgid "key,alt"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:28
msgid "Returns the value associated with key; alt otherwise"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:31
msgid "The ``keys`` method returns what Python 3 calls a **view** of its underlying keys. We can iterate over the view or turn the view into a list by using the ``list`` conversion function."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:45
#: ../../_sources/Dictionaries/Dictionarymethods.rst:57
#: ../../_sources/Dictionaries/Dictionarymethods.rst:78
#: ../../_sources/Dictionaries/Dictionarymethods.rst:96
#: ../../_sources/Dictionaries/Dictionarymethods.rst:116
#: ../../_sources/Dictionaries/Dictionarymethods.rst:121
msgid ""
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:45
msgid "inventory = {'apples': 430, 'bananas': 312, 'oranges': 525, 'pears': 217}\n"
"\n"
"for akey in inventory.keys():     # the order in which we get the keys is not defined\n"
"   print(\"Got key\", akey, \"which maps to value\", inventory[akey])\n"
"\n"
"ks = list(inventory.keys())\n"
"print(ks)"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:46
msgid "It is so common to iterate over the keys in a dictionary that you can omit the ``keys`` method call in the ``for`` loop --- iterating over a dictionary implicitly iterates over its keys."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:57
msgid "inventory = {'apples': 430, 'bananas': 312, 'oranges': 525, 'pears': 217}\n"
"\n"
"for k in inventory:\n"
"   print(\"Got key\", k)"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:58
msgid "As we saw earlier with strings and lists, dictionary methods use dot notation, which specifies the name of the method to the right of the dot and the name of the object on which to apply the method immediately to the left of the dot. The empty parentheses in the case of ``keys`` indicate that this method takes no parameters."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:63
msgid "The ``values`` and ``items`` methods are similar to ``keys``. They return  view objects which can be turned into lists or iterated over directly.  Note that the items are shown as tuples containing the key and the associated value."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:78
msgid "inventory = {'apples': 430, 'bananas': 312, 'oranges': 525, 'pears': 217}\n"
"\n"
"print(list(inventory.values()))\n"
"print(list(inventory.items()))\n"
"\n"
"for (k,v) in inventory.items():\n"
"    print(\"Got\", k, \"that maps to\", v)\n"
"\n"
"for k in inventory:\n"
"    print(\"Got\", k, \"that maps to\", inventory[k])"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:79
msgid "Note that tuples are often useful for getting both the key and the value at the same time while you are looping.  The two loops do the same thing."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:83
msgid "The ``in`` and ``not in`` operators can test if a key is in the dictionary:"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:96
msgid "inventory = {'apples': 430, 'bananas': 312, 'oranges': 525, 'pears': 217}\n"
"print('apples' in inventory)\n"
"print('cherries' in inventory)\n"
"\n"
"if 'bananas' in inventory:\n"
"    print(inventory['bananas'])\n"
"else:\n"
"    print(\"We have no bananas\")"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:97
msgid "This operator can be very useful since looking up a non-existent key in a dictionary causes a runtime error."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:100
msgid "The ``get`` method allows us to access the value associated with a key, similar to the ``[ ]`` operator. The important difference is that ``get`` will not cause a runtime error if the key is not present.  It will instead return None.  There exists a variation of ``get`` that allows a second parameter that serves as an alternative return value in the case where the key is not present.  This can be seen in the final example below.  In this case, since \"cherries\" is not a key, return 0 (instead of None)."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:116
msgid "inventory = {'apples': 430, 'bananas': 312, 'oranges': 525, 'pears': 217}\n"
"\n"
"print(inventory.get(\"apples\"))\n"
"print(inventory.get(\"cherries\"))\n"
"\n"
"print(inventory.get(\"cherries\", 0))"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:119
msgid "This workspace is provided for your convenience.  You can use this activecode window to try out anything you like."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:121
msgid "\n"
""
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:124
msgid "**Check your understanding**"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "cat"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "dog"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "elephant"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "bear"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "keylist is a list of all the keys which is then sorted.  cat would be at index 1."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "keylist is a list of all the keys which is then sorted.  dog would be at index 2."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "Yes, the list of keys is sorted and the item at index 3 is printed."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:148
msgid "keylist is a list of all the keys which is then sorted.  bear would be at index 0."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:138
msgid "dict-3-1: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:140
msgid "mydict = {\"cat\":12, \"dog\":6, \"elephant\":23, \"bear\":20}\n"
"keylist = list(mydict.keys())\n"
"keylist.sort()\n"
"print(keylist[3])"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "2"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "0.5"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "Error, divide is not a valid operation on dictionaries."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "get returns the value associated with a given key so this divides 12 by 6."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "12 is divided by 6, not the other way around."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "Take another look at the example for get above.  get returns the value associated with a given key."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:170
msgid "The integer division operator is being used on the values returned from the get method, not on the dictionary."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:161
msgid "dict-3-2: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:163
msgid "mydict = {\"cat\":12, \"dog\":6, \"elephant\":23, \"bear\":20}\n"
"answer = mydict.get(\"cat\") // mydict.get(\"dog\")\n"
"print(answer)"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:186
#: ../../_sources/Dictionaries/Dictionarymethods.rst:202
msgid "True"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:186
#: ../../_sources/Dictionaries/Dictionarymethods.rst:202
msgid "False"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:186
msgid "Yes, dog is a key in the dictionary."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:186
msgid "The in operator returns True if a key is in the dictionary, False otherwise."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:178
msgid "dict-3-3: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:180
msgid "mydict = {\"cat\":12, \"dog\":6, \"elephant\":23, \"bear\":20}\n"
"print(\"dog\" in mydict)"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:202
msgid "23 is a value in the dictionary, not a key."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:202
msgid "Yes, the in operator returns True if a key is in the dictionary, False otherwise."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:194
msgid "dict-3-4: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:196
msgid "mydict = {\"cat\":12, \"dog\":6, \"elephant\":23, \"bear\":20}\n"
"print(23 in mydict)"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "18"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "43"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "0"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "61"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "Add the values that have keys greater than 3, not equal to 3."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "Yes, the for statement iterates over the keys.  It adds the values of the keys that have length greater than 3."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "This is the accumulator pattern.  total starts at 0 but then changes as the iteration proceeds."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:227
msgid "Not all the values are added together.  The if statement only chooses some of them."
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:215
msgid "dict-3-5: What is printed by the following statements?"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:217
msgid "total = 0\n"
"mydict = {\"cat\":12, \"dog\":6, \"elephant\":23, \"bear\":20}\n"
"for akey in mydict:\n"
"   if len(akey) > 3:\n"
"      total = total + mydict[akey]\n"
"print(total)"
msgstr ""

#: ../../_sources/Dictionaries/Dictionarymethods.rst:228
msgid "aliases"
msgstr ""

