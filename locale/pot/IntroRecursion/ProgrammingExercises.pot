# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum, Created using Runestone Interactive
# This file is distributed under the same license as the How to Think Like a Computer Scientist package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: How to Think Like a Computer Scientist 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-26 18:20-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:11
msgid "Programming Exercises"
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:16
msgid "Write a recursive function to compute the factorial of a number."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:42
msgid "Write a recursive function to reverse a list."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:64
msgid "Modify the recursive tree program using one or all of the following ideas:"
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:67
msgid "Modify the thickness of the branches so that as the ``branchLen`` gets smaller, the line gets thinner."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:70
msgid "Modify the color of the branches so that as the ``branchLen`` gets very short it is colored like a leaf."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:73
msgid "Modify the angle used in turning the turtle so that at each branch point the angle is selected at random in some range. For example choose the angle between 15 and 45 degrees. Play around to see what looks good."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:78
msgid "Modify the ``branchLen`` recursively so that instead of always subtracting the same amount you subtract a random amount in some range."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:82
msgid "If you implement all of the above ideas you will have a very realistic looking tree."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:90
msgid "Find or invent an algorithm for drawing a fractal mountain. Hint: One approach to this uses triangles again."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:98
msgid "Write a recursive function to compute the Fibonacci sequence. How does the performance of the recursive function compare to that of an iterative version?"
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:106
msgid "Implement a solution to the Tower of Hanoi using three stacks to keep track of the disks."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:113
msgid "Using the turtle graphics module, write a recursive program to display a Hilbert curve."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:121
msgid "Using the turtle graphics module, write a recursive program to display a Koch snowflake."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:129
msgid "Write a program to solve the following problem: You have two jugs: a 4-gallon jug and a 3-gallon jug. Neither of the jugs have markings on them. There is a pump that can be used to fill the jugs with water. How can you get exactly two gallons of water in the 4-gallon jug?"
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:138
msgid "Generalize the problem above so that the parameters to your solution include the sizes of each jug and the final amount of water to be left in the larger jug."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:146
msgid "Write a program that solves the following problem: Three missionaries and three cannibals come to a river and find a boat that holds two people. Everyone must get across the river to continue on the journey. However, if the cannibals ever outnumber the missionaries on either bank, the missionaries will be eaten. Find a series of crossings that will get everyone safely to the other side of the river."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:158
msgid "Modify the Tower of Hanoi program using turtle graphics to animate the movement of the disks. Hint: You can make multiple turtles and have them shaped like rectangles."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:167
msgid "Pascal’s triangle is a number triangle with numbers arranged in staggered rows such that"
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:173
msgid "This equation is the equation for a binomial coefficient. You can build Pascal’s triangle by adding the two numbers that are diagonally above a number in the triangle. An example of Pascal’s triangle is shown below."
msgstr ""

#: ../../_sources/IntroRecursion/ProgrammingExercises.rst:186
msgid "Write a program that prints out Pascal’s triangle. Your program should accept a parameter that tells how many rows of the triangle to print."
msgstr ""

